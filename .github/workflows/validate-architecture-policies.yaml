name: Validate architecture aligned to Policies
on:
  pull_request:
    types:
      - opened
    branches:
      - main
    paths:
      - architecture/**/*.puml
  workflow_dispatch:
jobs:
  check-adr:
    name: ‚úÖ Check ADR Files
    runs-on: ubuntu-latest
    steps:
      - name: Exit if not draft or not from 'develop'
        if: github.head_ref != 'develop' || github.event.pull_request.draft != true
        run: |
          echo "Skipping ‚Äî either not from 'develop' or not a draft PR"
          exit 0
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check for ADR files
        run: |
          if ls adr/*.md 1> /dev/null 2>&1; then
            echo "ADR files found."
          else
            echo "‚ùå No ADR files found in the adr/ directory."
            exit 1
          fi
  check-control-yaml:
    name: ‚úÖ Validate Control YAML
    runs-on: ubuntu-latest
    steps:
      - name: Exit if not draft or not from 'develop'
        if: github.head_ref != 'develop' || github.event.pull_request.draft != true
        run: |
          echo "Skipping ‚Äî either not from 'develop' or not a draft PR"
          exit 0
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install yq
        run: >
          wget
          https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          -O yq

          chmod +x yq

          sudo mv yq /usr/local/bin/yq
      - name: Confirm yq installation
        run: yq --version
      - name: Print YAML control titles
        run: |
          CONTROL_FILES=$(find ./controls -name '*-control.yaml')

          if [ -z "$CONTROL_FILES" ]; then
            echo "‚ùå No control YAML files found under ./controls"
            exit 1
          fi

          printf "\n%-50s | %-50s\n" "Control File" "Title"
          printf -- '%.0s-' {1..105}; echo

          for FILE in $CONTROL_FILES; do
            TITLE=$(yq '.title' "$FILE")
            TITLE="${TITLE:-‚ùå No title found}"
            printf "%-50s | %-50s\n" "$FILE" "$TITLE"
          done
  #Validating Policy code is commented for now, no wf will be triggered
  validate-policy:
    name: ‚úÖ Policy-Architecture Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Exit if not draft or not from 'develop'
        if: github.head_ref != 'develop' || github.event.pull_request.draft != true
        run: |
          echo "Skipping ‚Äî either not from 'develop' or not a draft PR"
          exit 0
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full repo history and all branches are available
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Make script executable
        run: chmod +x scripts/validate_policy_architecture_compliance1.py
        
      - name: Run validation script
        run: python ./scripts/validate_policy_architecture_compliance1.py

      - name: Debug ‚Äì List report files
        if: always()
        run: ls -l aac-direct-debit-update/compliance-reports || echo "Listing file under compliance-report"
        
      - name: Upload report artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: policy-evaluation-report
          path: aac-direct-debit-update/compliance-reports/policy_evaluation_report_*.md

      - name: Commit and push report
        if: always()
        run: |
          git config user.name "github-actions[bot]"  # Set Git username
          git config user.email "github-actions[bot]@users.noreply.github.com"  # Set Git email
          git fetch origin Develop  # Fetch develop branch from remote
          git checkout Develop  # Switch to develop branch
          git pull origin Develop  # Pull latest changes from develop
          git add aac-direct-debit-update/compliance-reports/policy_evaluation_report_*.md  # Stage report file
          git commit -m "Update Architecture vs policy analysis report" || echo "No changes to commit"  # Commit or skip if no changes
          git push origin Develop  # Push to remote develop branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      
  mark-ready:
    name: üöÄ Mark PR as Ready for Review
    runs-on: ubuntu-latest
    needs:
      - check-adr
      - check-control-yaml
    #- validate-policy
    if: ${{ github.event.pull_request.draft == true && github.head_ref == 'develop' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.PAT_REPO_WRITE }}" | gh auth login --with-token

      - name: Mark PR as Ready for Review
        run: |
          echo "Marking PR #${{ github.event.pull_request.number }} as ready for review..."
          gh pr ready ${{ github.event.pull_request.number }} --repo ${{ github.repository }}
