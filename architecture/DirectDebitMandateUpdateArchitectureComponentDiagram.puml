@startuml DirectDebitMandateUpdateArchitectureAWS

!include https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml

' === Styling ====
skinparam backgroundColor #F9F9F
skinparam defaultFontName "Consolas"
skinparam ArrowColor #4A90E2
skinparam componentStyle rectangle
skinparam Shadowing true

' === Legend ====
legend
|= Color |= Meaning |
| #LightBlue | External System |
| #Green | Internal Service |
| #Yellow | Data Store |
| #Orange | AWS Managed Service |
endlegend

' === External Systems ===
System_Ext(ClientApp, "CRM / Client Portal", "Initiates mandate update requests") #LightBlue
System_Ext(ThoughtMachine, "Thought Machine Vault Core", "Core banking API") #LightBlue

' === AWS Infrastructure ===
System_Boundary(aws, "AWS Cloud") {

  ' -- AWS Managed Services --
  Container(ApiGateway, "Amazon API Gateway", "HTTPS Entry Point", "Public endpoint for mandate API") #Orange
  Container(Secrets, "AWS Secrets Manager", "Secrets Store", "Stores API credentials and DB passwords") #Orange
  Container(Monitoring, "Amazon CloudWatch", "Observability", "Logs, metrics and alarms for service") #Orange

  ' -- ECS Cluster and Application Containers --
  System_Boundary(ecs, "ECS Fargate Cluster") {
    Container(WebAPI, "MandateUpdateController", "Spring Boot REST Controller", "Exposes mandate update API") <<controller>> #Green
    Container(ServiceLayer, "MandateUpdateService", "Spring Service", "Business logic for validation and transformation") <<service>> #Green
    Container(AdapterClient, "VaultCoreClient", "Spring REST Client", "Calls Thought Machine API") <<interface>> #Green
  }

  ' -- Database --
  ContainerDb(AuditStore, "Audit Log", "Amazon RDS PostgreSQL", "Stores request/response logs and metadata") #Yellow
}

' === Relationships ===
Rel(ClientApp, ApiGateway, "Sends Direct Debit Update", "HTTPS / JSON")
Rel(ApiGateway, WebAPI, "Forwards REST request", "HTTP")

Rel(WebAPI, ServiceLayer, "Invokes mandate update logic")
Rel(ServiceLayer, AdapterClient, "Calls Vault Core API")
Rel(AdapterClient, ThoughtMachine, "Performs mandate update", "HTTPS + OAuth2") 
Rel(ServiceLayer, AuditStore, "Persists audit logs", "JDBC")

Rel(WebAPI, Secrets, "Reads DB/API credentials", "IAM-secured")
Rel(ServiceLayer, Monitoring, "Sends logs/metrics", "CloudWatch Agent")
Rel(AdapterClient, Monitoring, "Sends error and retry logs", "CloudWatch Agent")

' === Annotations ===
note right of ServiceLayer
  <<Tier 1>>
  Validates mandate rules
  Applies compliance logic
  Handles PII
end note

note top of AdapterClient
  Secure API integration
  Handles retries and error translation
end note

note bottom of AuditStore
  <<GDPR>>
  Contains masked sensitive fields
  Data retention: 7 years
end note

@enduml
